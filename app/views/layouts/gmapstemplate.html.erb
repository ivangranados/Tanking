<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Station</title>
    <%= stylesheet_link_tag    "application", :media => "all" %>
    <%= javascript_include_tag "application" %>
    <%= csrf_meta_tags %>
    <script type="text/javascript"
      src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBWf2egzizldbxbug8ZdxIGqyKEP6Tnorc&sensor=false">
    </script>

    <script type="text/css">
      .context_menu{
        background-color:white;
        border:1px solid gray;
      }
      .context_menu_item{
        padding:3px 6px;
      }
      .context_menu_item:hover{
        background-color:#CCCCCC;
      }
      .context_menu_separator{
        background-color:gray;
        height:1px;
        margin:0;
        padding:0;
      }
      #clearDirectionsItem, #getDirectionsItem{
        display:none;
      }
    </script>

    <script>
      var rendererOptions = {
        draggable: true
      };
      var directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);;
      var directionsService = new google.maps.DirectionsService();
      var map;

      var australia = new google.maps.LatLng(-25.274398, 133.775136);

      function initialize() {

        var mapOptions = {
          zoom: 7,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          center: australia
        };
        map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('directionsPanel'));

        google.maps.event.addListener(directionsDisplay, 'directions_changed', function() {
          computeTotalDistance(directionsDisplay.directions);
        });

        var contextMenuOptions={};
        contextMenuOptions.classNames={menu:'context_menu', menuSeparator:'context_menu_separator'};
        
        //  create an array of ContextMenuItem objects
        //  an 'id' is defined for each of the four directions related items
        var menuItems=[];
        menuItems.push({className:'context_menu_item', eventName:'directions_origin_click', id:'directionsOriginItem', label:'Directions from here'});
        menuItems.push({className:'context_menu_item', eventName:'directions_destination_click', id:'directionsDestinationItem', label:'Directions to here'});
        menuItems.push({className:'context_menu_item', eventName:'clear_directions_click', id:'clearDirectionsItem', label:'Clear directions'});
        menuItems.push({className:'context_menu_item', eventName:'get_directions_click', id:'getDirectionsItem', label:'Get directions'});
        //  a menuItem with no properties will be rendered as a separator
        menuItems.push({});
        menuItems.push({className:'context_menu_item', eventName:'zoom_in_click', label:'Zoom in'});
        menuItems.push({className:'context_menu_item', eventName:'zoom_out_click', label:'Zoom out'});
        menuItems.push({});
        menuItems.push({className:'context_menu_item', eventName:'center_map_click', label:'Center map here'});
        contextMenuOptions.menuItems=menuItems;
        
        var contextMenu=new ContextMenu(map, contextMenuOptions);
        
        google.maps.event.addListener(map, 'rightclick', function(mouseEvent){
          contextMenu.show(mouseEvent.latLng);
        });
        
        //  create markers to show directions origin and destination
        //  both are not visible by default
        var markerOptions={};
        markerOptions.icon='http://www.google.com/intl/en_ALL/mapfiles/markerA.png';
        markerOptions.map=null;
        markerOptions.position=new google.maps.LatLng(0, 0);
        markerOptions.title='Directions origin';
        
        var originMarker=new google.maps.Marker(markerOptions);
        
        markerOptions.icon='http://www.google.com/intl/en_ALL/mapfiles/markerB.png';
        markerOptions.title='Directions destination';
        var destinationMarker=new google.maps.Marker(markerOptions);
        
        //  listen for the ContextMenu 'menu_item_selected' event
        google.maps.event.addListener(contextMenu, 'menu_item_selected', function(latLng, eventName){
          switch(eventName){
            case 'directions_origin_click':
              originMarker.setPosition(latLng);
              if(!originMarker.getMap()){
                originMarker.setMap(map);
              }
              break;
            case 'directions_destination_click':
              destinationMarker.setPosition(latLng);
              if(!destinationMarker.getMap()){
                destinationMarker.setMap(map);
              }
              break;
            case 'clear_directions_click':
              directionsRenderer.setMap(null);
              //  set CSS styles to defaults
              document.getElementById('clearDirectionsItem').style.display='';
              document.getElementById('directionsDestinationItem').style.display='';
              document.getElementById('directionsOriginItem').style.display='';
              document.getElementById('getDirectionsItem').style.display='';
              break;
            case 'get_directions_click':
              var directionsRequest={};
              directionsRequest.destination=destinationMarker.getPosition();
              directionsRequest.origin=originMarker.getPosition();
              directionsRequest.travelMode=google.maps.TravelMode.DRIVING;
              
              directionsService.route(directionsRequest, function(result, status){
                if(status===google.maps.DirectionsStatus.OK){
                  //  hide the origin and destination markers as the DirectionsRenderer will render Markers itself
                  originMarker.setMap(null);
                  destinationMarker.setMap(null);
                  directionsRenderer.setDirections(result);
                  directionsRenderer.setMap(map);
                  //  hide all but the 'Clear directions' menu item
                  document.getElementById('clearDirectionsItem').style.display='block';
                  document.getElementById('directionsDestinationItem').style.display='none';
                  document.getElementById('directionsOriginItem').style.display='none';
                  document.getElementById('getDirectionsItem').style.display='none';
                } else {
                  alert('Sorry, the map was unable to obtain directions.\n\nThe request failed with the message: '+status);
                }
              });
              break;
            case 'zoom_in_click':
              map.setZoom(map.getZoom()+1);
              break;
            case 'zoom_out_click':
              map.setZoom(map.getZoom()-1);
              break;
            case 'center_map_click':
              map.panTo(latLng);
              break;
          }
          if(originMarker.getMap() && destinationMarker.getMap() && document.getElementById('getDirectionsItem').style.display===''){
            //  display the 'Get directions' menu item if it is not visible and both directions origin and destination have been selected
            document.getElementById('getDirectionsItem').style.display='block';
          }
          });


        calcRoute();




      }

      function calcRoute() {

        var request = {
          origin: 'Barranquillita, Barranquilla, Atlantico, Colombia (Distrito Especial, Industrial Y Portuario)',
          destination: 'Barranquillita, Barranquilla, Atlantico, Colombia (Distrito Especial, Industrial Y Portuario)',
          waypoints:[{location: 'Los Estudiantes, Barranquilla'}, {location: 'Calle 6, Barranquilla'}],
          travelMode: google.maps.DirectionsTravelMode.DRIVING
        };
        directionsService.route(request, function(response, status) {
          if (status == google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(response);
          }
        });
      }

      function computeTotalDistance(result) {
        var total = 0;
        var myroute = result.routes[0];
        for (i = 0; i < myroute.legs.length; i++) {
          total += myroute.legs[i].distance.value;
        }
        total = total / 1000.
        document.getElementById('total').innerHTML = total + ' km';
      }
    </script>
    <style type="text/css">
        html, body {
          height: 100%;
          margin: 0;
          padding: 40px;
        }
        
        
        
        
        
          
        }
    </style>
    
  </head>
  <body onload="initialize()">
    <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="navbar-inner">
        
        <div class="container">
          <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <a class="brand" href=/>Tanking App</a>
          <div class="nav-collapse collapse">
            <ul class="nav">
              <li class="active"><a href=/>Home</a></li>
              <%if user_signed_in?%>   
              <li><%=link_to "Sign out", destroy_user_session_path, :method => :delete %> </li>
              <% end %>
              <li><a href="#contact">Contact</a></li>
            </ul>
          </div><!--/.nav-collapse -->
        </div>
      </div>
    </div>

    <div id="map_canvas" style="float:left;width:100%; height:60%"></div>
    </div>
    <%= yield %>
  </body>
</html>
